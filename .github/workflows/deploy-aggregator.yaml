name: Create and publish SSO Aggregator helm chart

on:
  push:
    branches:
    - main
    - dev
    paths:
    - aggregator/**
    - helm/aggregator/**
    - .github/workflows/deploy-aggregator.yaml

env:
  GITHUB_REGISTRY: ghcr.io
  IMAGE_NAME: bcgov/sso-aggregator

jobs:
  create_release:
    # Only release on push to main
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push')
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.release.outputs.tag_name }}
    steps:
    - name: Create Release
      id: release
      uses: rymndhng/release-on-push-action@v0.28.0
      with:
        bump_version_scheme: patch
        tag_prefix: v
        use_github_release_notes: 'true'
        release_name: Release <RELEASE_VERSION>
        max_commits: 100

  set-tag:
    needs: [create_release]
    if: always()
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set.outputs.tag }}
    steps:
    - name: Set tag based on context
      id: set
      run: |
        if [[ "${GITHUB_REF##*/}" == "main" ]]; then
          echo "::set-output name=tag::${{ needs.create_release.outputs.tag }}"
        else
          echo "::set-output name=tag::dev"
        fi

  build-and-push-image:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    needs: set-tag
    if: always()
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
    - name: Install CLI tools from OpenShift Mirror
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        source: mirror
        kam: latest
        oc: 4.18.7
    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Log in to the GitHub Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.GITHUB_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: aggregator
        push: true
        tags: ${{ format('{0}/{1}:{2}', env.GITHUB_REGISTRY, env.IMAGE_NAME, needs.set-tag.outputs.tag) }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Set env to Sandbox
      if: (github.ref == 'refs/heads/dev' && github.event_name == 'push')
      run: |
        cat >> $GITHUB_ENV <<EOF
        OPENSHIFT_TOKEN=${{ secrets.SANDBOX_OPENSHIFT_TOKEN }}
        OPENSHIFT_SERVER=${{ secrets.SANDBOX_OPENSHIFT_SERVER }}
        OPENSHIFT_NAMESPACE=e4ca1d-prod
        EOF

    - name: Set env to Production
      if: (github.ref == 'refs/heads/main' && github.event_name == 'push')
      run: |
        cat >> $GITHUB_ENV <<EOF
        OPENSHIFT_TOKEN=${{ secrets.PROD_OPENSHIFT_TOKEN }}
        OPENSHIFT_SERVER=${{ secrets.PROD_OPENSHIFT_SERVER }}
        OPENSHIFT_NAMESPACE=eb75ad-tools
        EOF

    - name: Authenticate and set context
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    - name: Deploy aggregator with Helm chart
      run: |
        namespace=${{ env.OPENSHIFT_NAMESPACE }}
        helm upgrade --install sso-aggregator . -n ${namespace} \
        -f values.yaml -f "values-${namespace}.yaml" --set image.tag="${{ needs.set-tag.outputs.tag }}"
      working-directory: ./helm/aggregator
