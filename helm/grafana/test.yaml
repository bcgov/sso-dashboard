---
# Source: grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-6.46.1
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: sso-grafana
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
  name: sso-grafana
  namespace: c6af30-prod
---
# Source: grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sso-grafana
  namespace: c6af30-prod
  labels:
    helm.sh/chart: grafana-6.46.1
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: sso-grafana
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: "Y2NiN2ZvWURSa3F4cjJyTFdnMkpIZGJ0TmlWb1ZVM0JmMGl6SlVxRA=="
  ldap-toml: ""
---
# Source: grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sso-grafana
  namespace: c6af30-prod
  labels:
    helm.sh/chart: grafana-6.46.1
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: sso-grafana
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [auth.generic_oauth]
    allow_sign_up = true
    allowed_domains =
    api_url =
    auth_url = <please-replace-me>
    client_id = ddd
    client_secret = <please-replace-me>
    empty_scopes = false
    enabled = true
    icon = signin
    login_attribute_path = preferred_username
    name = Keycloak
    scopes = openid
    tls_client_ca =
    tls_client_cert =
    tls_client_key =
    tls_skip_verify_insecure = true
    token_url = <please-replace-me>
    use_pkce = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = ''
---
# Source: grafana/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sso-grafana
  namespace: c6af30-prod
  labels:
    helm.sh/chart: grafana-6.46.1
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: sso-grafana
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
  finalizers:
    - kubernetes.io/pvc-protection
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
  storageClassName: netapp-block-standard
---
# Source: grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sso-grafana
  namespace: c6af30-prod
  labels:
    helm.sh/chart: grafana-6.46.1
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: sso-grafana
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: sso-grafana
---
# Source: grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sso-grafana
  namespace: c6af30-prod
  labels:
    helm.sh/chart: grafana-6.46.1
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: sso-grafana
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: sso-grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: sso-grafana
      annotations:
        checksum/config: cbefe0e47f1315af61aca37b1107e32558628913f01134db667b54ca8e279659
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: 11108df7d57af8ab4f24e010cbccf59545b84cc70a8a5c893a9679b0bc188dbd
    spec:

      serviceAccountName: sso-grafana
      automountServiceAccountToken: true
      initContainers:
      enableServiceLinks: true
      containers:
        - name: grafana
          image: "grafana/grafana:9.3.0"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: sso-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sso-grafana
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: sso-grafana
        - name: storage
          persistentVolumeClaim:
            claimName: sso-grafana
